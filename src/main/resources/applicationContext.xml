<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

<!--    spring在启动时候进行组件扫描，完成对象的创建与初始化的工作-->
    <context:component-scan base-package="top.tang360" />

<!--    开启spring  mvc的注解模式-->
    <mvc:annotation-driven>
        <mvc:message-converters>
<!--            对POST请求的响应进行字符集编码-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

<!--    把静态资源排除在外-->
    <mvc:default-servlet-handler />

<!--    Maybatis与Spring的整合配置-->
<!--    1, 配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
<!--        jdbc驱动-->
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
<!--        连接字符串-->
        <property name="url" value="jdbc:mysql://192.168.0.12:3306/book_reader?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true" />
<!--        连接数据库的用户名和密码-->
        <property name="username" value="root" />
        <property name="password" value="123456" />

<!--        连接池初始化时候设置几个数据库连接-->
        <property name="initialSize" value="5" />
<!--        连接池最大数量-->
        <property name="maxActive" value="20" />

    </bean>
<!--    2.配置SessionFactoryBean, 在spring  ioc容器启动时候，自动完成sessionFactory的创建-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        关联前面创建的数据源-->
        <property name="dataSource" ref="dataSource" />
<!--        扫描哪个目录下的mapper文件-->
        <property name="mapperLocations" value="classpath:mappers/*.xml" />
<!--        配置文件路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

<!--    3,配置Mapper扫描器-->
<!--            通知mybatis扫描哪一个目录下的接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="top.tang360.reader.mapper" />
    </bean>
<!--    4,配置mybatis-config.xml-->

</beans>